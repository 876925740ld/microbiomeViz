geom_point(size=table$nodeSize, shape=21, fill='white')
table
tsystem.file("inst/extdata", "SRS014459-Stool_profile.txt", package = "parseMetaphlanTSV")
system.file("inst/extdata", "SRS014459-Stool_profile.txt", package = "parseMetaphlanTSV")
system.file("inst/extdata", "SRS014459-Stool_profile.txt")
system.file("extdata", "SRS014459-Stool_profile.txt")
devtools::document()
system.file("extdata", "SRS014459-Stool_profile.txt")
library(microbiomeViz)
system.file("extdata", "SRS014459-Stool_profile.txt")
library(devtools)
system.file("extdata", "SRS014459-Stool_profile.txt")
system.file("~/Programs/git-repos/microbiomeViz/inst/extdata", "SRS014459-Stool_profile.txt")
system.file("~/Programs/git-repos/microbiomeViz/inst/extdata/SRS014459-Stool_profile.txt")
library(microbiomeViz)
library(phylobase)
file = '~/Downloads/SRS014459-Stool_profile.txt'
taxtab <- read.table(file, sep='\t', stringsAsFactors=FALSE) %>%
slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
library(dplyr)
taxtab <- read.table(file, sep='\t', stringsAsFactors=FALSE) %>%
slice(-grep('unclassified', .[,index]))
index=1
delimiter='\\|'
taxtab <- read.table(file, sep='\t', stringsAsFactors=FALSE) %>%
slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
tax_split <- strsplit(taxtab$V1, delimiter)    ## split into different taxonomy levels
child <- sapply(tax_split, tail, n=1)
tax_class <- do.call(rbind, strsplit(child, '__'))[,1]
parent <- sapply(tax_split, function(x) ifelse(length(x)>1, x[length(x)-1], 'root'))
isTip <- !child %in% parent
index <- c()
index[isTip] <- 1:sum(isTip)
index[!isTip] <- (sum(isTip)+1):length(isTip)
## tips comes first
mapping <- data.frame(id=index, row.names=child, isTip, taxaAbun=taxtab$V2)
edges <- cbind(mapping[parent,]$id, mapping$id)
edges <- edges[!is.na(edges[,1]),]
a <- 1
b <- 1
nodeSize <- a*log(mapping$taxaAbun[order(mapping$id)]) + b
nodeClass <- factor(tax_class[order(mapping$id)], levels = rev(tax_chars))
tr <- list(edge = edges,
node.label=rownames(mapping)[!mapping$isTip],
tip.label=rownames(mapping[mapping$isTip,]),
Nnode = sum(!mapping$isTip),
nodeTax=nodeClass,
nodeSize=nodeSize,
edge.length=rep(1, nrow(edges))
)
class(tr) <- "phylo"
phylo4(phylo)
phylo4(tr)
?phylo4d
?I
tr
as(tr, 'phylo4')
tmp = as(tr, 'phylo4')
ggtree(tmp)
library(ggtree)
ggtree(tmp)
p <- ggtree(metaphlan, size=2, col='grey3', layout = 'circular') +
geom_point(size=metaphlan$nodeSize, shape=21, fill='white')
p <- ggtree(tr, size=2, col='grey3', layout = 'circular') +
geom_point(size=tr$nodeSize, shape=21, fill='white')
p
#library(phylobase)
library(dplyr)
require(phylobase)
file <- '~/Downloads/SRS014459-Stool_profile.txt'
delimiter <- '\\|'
index <- 1
taxtab <- read.table(file, sep='\t', stringsAsFactors=FALSE) %>%
slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
tax_split <- strsplit(taxtab$V1, delimiter)    ## split into different taxonomy levels
child <- sapply(tax_split, tail, n=1)
tax_class <- do.call(rbind, strsplit(child, '__'))[,1]
parent <- sapply(tax_split, function(x) ifelse(length(x)>1, x[length(x)-1], 'root'))
# isTip <- !child %in% parent
# index <- c()
# index[isTip] <- 1:sum(isTip)
# index[!isTip] <- (sum(isTip)+1):length(isTip)
index <- 1:nrow(taxtab)
## tips comes first
mapping <- data.frame(id=index, row.names=child, isTip, taxaAbun=taxtab$V2)
## tips comes first
mapping <- data.frame(id=index, row.names=child, taxaAbun=taxtab$V2)
edges <- cbind(mapping[parent,]$id, mapping$id)
edges <- edges[!is.na(edges[,1]),]
edges
tr <- phylo4(edge = edges,
edge.length = 1
)
edges
phylo4
parent <- sapply(tax_split, function(x) ifelse(length(x)>1, x[length(x)-1], 'root'))
isTip <- !child %in% parent
index <- c()
index[isTip] <- 1:sum(isTip)
index[!isTip] <- (sum(isTip)+1):length(isTip)
index <- 1:nrow(taxtab)
## tips comes first
mapping <- data.frame(id=index, row.names=child, taxaAbun=taxtab$V2)
edges <- cbind(mapping[parent,]$id, mapping$id)
edges <- edges[!is.na(edges[,1]),]
tr <- phylo4(edge = edges,
edge.length = 1
)
tr <- phylo4(x = edges,
edge.length = 1
)
edges
isTip <- !child %in% parent
index <- c()
index[isTip] <- 1:sum(isTip)
index[!isTip] <- (sum(isTip)+1):length(isTip)
index <- 1:nrow(taxtab)
## tips comes first
mapping <- data.frame(id=index, row.names=child, taxaAbun=taxtab$V2)
edges <- cbind(mapping[parent,]$id, mapping$id)
edges <- edges[!is.na(edges[,1]),]
edges
taxtab <- read.table(file, sep='\t', stringsAsFactors=FALSE) %>%
slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
tax_split <- strsplit(taxtab$V1, delimiter)    ## split into different taxonomy levels
child <- sapply(tax_split, tail, n=1)
tax_class <- do.call(rbind, strsplit(child, '__'))[,1]
parent <- sapply(tax_split, function(x) ifelse(length(x)>1, x[length(x)-1], 'root'))
isTip <- !child %in% parent
index <- c()
index[isTip] <- 1:sum(isTip)
index[!isTip] <- (sum(isTip)+1):length(isTip)
index <- 1:nrow(taxtab)
## tips comes first
mapping <- data.frame(id=index, row.names=child, taxaAbun=taxtab$V2)
edges <- cbind(mapping[parent,]$id, mapping$id)
edges <- edges[!is.na(edges[,1]),]
edges
taxtab <- read.table(file, sep='\t', stringsAsFactors=FALSE) %>%
slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
tax_split <- strsplit(taxtab$V1, delimiter)    ## split into different taxonomy levels
child <- sapply(tax_split, tail, n=1)
tax_class <- do.call(rbind, strsplit(child, '__'))[,1]
parent <- sapply(tax_split, function(x) ifelse(length(x)>1, x[length(x)-1], 'root'))
isTip <- !child %in% parent
index <- c()
index[isTip] <- 1:sum(isTip)
index[!isTip] <- (sum(isTip)+1):length(isTip)
## tips comes first
mapping <- data.frame(id=index, row.names=child, isTip, taxaAbun=taxtab$V2)
edges <- cbind(mapping[parent,]$id, mapping$id)
edges <- edges[!is.na(edges[,1]),]
a <- 1
b <- 1
nodeSize <- a*log(mapping$taxaAbun[order(mapping$id)]) + b
nodeClass <- factor(tax_class[order(mapping$id)], levels = rev(tax_chars))
phylo4(edges)
tr <- phylo4(edges,
edge.length = rep(1, nrow(edges))
)
tr
index <- 1:nrow(taxtab)
index
## tips comes first
mapping <- data.frame(id=index, row.names=child, taxaAbun=taxtab$V2)
edges <- cbind(mapping[parent,]$id, mapping$id)
edges <- edges[!is.na(edges[,1]),]
tr <- phylo4(edges,
edge.length = rep(1, nrow(edges))
)
taxtab <- read.table(file, sep='\t', stringsAsFactors=FALSE) %>%
slice(-grep('unclassified', .[,index]))
index
index=1
taxtab <- read.table(file, sep='\t', stringsAsFactors=FALSE) %>%
slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
tax_split <- strsplit(taxtab$V1, delimiter)    ## split into different taxonomy levels
child <- sapply(tax_split, tail, n=1)
tax_class <- do.call(rbind, strsplit(child, '__'))[,1]
parent <- sapply(tax_split, function(x) ifelse(length(x)>1, x[length(x)-1], 'root'))
isTip <- !child %in% parent
index <- c()
index[isTip] <- 1:sum(isTip)
index[!isTip] <- (sum(isTip)+1):length(isTip)
## tips comes first
mapping <- data.frame(id=index, row.names=child, isTip, taxaAbun=taxtab$V2)
edges <- cbind(mapping[parent,]$id, mapping$id)
edges <- edges[!is.na(edges[,1]),]
a <- 1
b <- 1
nodeSize <- a*log(mapping$taxaAbun[order(mapping$id)]) + b
nodeClass <- factor(tax_class[order(mapping$id)], levels = rev(tax_chars))
tr <- phylo4(x = edges,
edge.length = rep(1, nrow(edges))
)
tr
?phylo4
tr <- phylo4(x = edges,
edge.length = rep(1, nrow(edges))
node.label = rownames(mapping)[!mapping$isTip],
tip.label = rownames(mapping[mapping$isTip,])
)
tr <- phylo4(x = edges,
edge.length = rep(1, nrow(edges)),
node.label = rownames(mapping)[!mapping$isTip],
tip.label = rownames(mapping[mapping$isTip,])
)
tr
tr$label
tr@label
tr <- phylo4(x = edges,
edge.length = rep(1, nrow(edges)),
node.label = rownames(mapping)[!mapping$isTip],
tip.label = rownames(mapping[mapping$isTip,]),
annote = list(nodeSize=nodeSize)
)
tr
tr@annote
?phylo4d
tr <- phylo4d(x = edges,
edge.length = rep(1, nrow(edges)),
node.label = rownames(mapping)[!mapping$isTip],
tip.label = rownames(mapping[mapping$isTip,]),
annote = list(nodeSize=nodeSize)
)
phylo4d
tr
tr <- phylo4d(x = edges,
edge.length = rep(1, nrow(edges)),
node.label = rownames(mapping)[!mapping$isTip],
tip.label = rownames(mapping[mapping$isTip,]),
all.data = data.frame(nodeSize)
)
tr
tr <- phylo4d(x = edges,
edge.length = rep(1, nrow(edges)),
node.label = rownames(mapping)[!mapping$isTip],
tip.label = rownames(mapping[mapping$isTip,]),
all.data = data.frame(nodeSize, nodeClass)
)
tr <- suppressWarnings(phylo4d(x = edges,
edge.length = rep(1, nrow(edges)),
node.label = rownames(mapping)[!mapping$isTip],
tip.label = rownames(mapping[mapping$isTip,]),
all.data = data.frame(nodeSize, nodeClass)
))
#library(phylobase)
library(dplyr)
require(phylobase)
file <- '~/Downloads/SRS014459-Stool_profile.txt'
delimiter <- '\\|'
index <- 1
parseMetaphlanTSV <- function(file, index=1, delimiter='\\|'){
taxtab <- read.table(file, sep='\t', stringsAsFactors=FALSE) %>%
slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
tax_split <- strsplit(taxtab$V1, delimiter)    ## split into different taxonomy levels
child <- sapply(tax_split, tail, n=1)
tax_class <- do.call(rbind, strsplit(child, '__'))[,1]
parent <- sapply(tax_split, function(x) ifelse(length(x)>1, x[length(x)-1], 'root'))
isTip <- !child %in% parent
index <- c()
index[isTip] <- 1:sum(isTip)
index[!isTip] <- (sum(isTip)+1):length(isTip)
## tips comes first
mapping <- data.frame(id=index, row.names=child, isTip, taxaAbun=taxtab$V2)
edges <- cbind(mapping[parent,]$id, mapping$id)
edges <- edges[!is.na(edges[,1]),]
a <- 1
b <- 1
nodeSize <- a*log(mapping$taxaAbun[order(mapping$id)]) + b
nodeClass <- factor(tax_class[order(mapping$id)], levels = rev(tax_chars))
tr <- phylo4d(x = edges,
edge.length = rep(1, nrow(edges)),
node.label = rownames(mapping)[!mapping$isTip],
tip.label = rownames(mapping[mapping$isTip,]),
all.data = data.frame(nodeSize, nodeClass)
)
return(tr)
}
tr <- parseMetaphlanTSV(file)
library(ggtree)
p <- ggtree(tr, size=2, col='grey', layout = 'circular') #+
p
p <- ggtree(tr, size=2, col='grey', layout = 'circular') +
geom_point(size=I(nodeSize), shape=21, fill='white')
p <- ggtree(tr, size=2, col='grey', layout = 'circular') +
geom_point(aes(size=I(nodeSize)), shape=21, fill='white')
p
devtools::document()
library(microbiomeViz)
parseMetaphlanTSV()
parseMetaphlanTSV('file')
parseMetaphlanTSV(file)
experiment1 <-
read.csv('~/Downloads/SRS014459-Stool_profile.txt')
file <- '~/Downloads/SRS014459-Stool_profile.txt'
delimiter <- '\\|'
index <- 1
taxtab <- read.table(file, sep='\t', stringsAsFactors=FALSE) %>%
slice(-grep('unclassified', .[,index]))
library(dplyr)
taxtab <- read.table(file, sep='\t', stringsAsFactors=FALSE) %>%
slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
tax_split <- strsplit(taxtab$V1, delimiter)    ## split into different taxonomy levels
child <- vapply(tax_split, tail, n=1, '')
tax_class <- do.call(rbind, strsplit(child, '__'))[,1]
parent <- vapply(tax_split, function(x) ifelse(length(x)>1, x[length(x)-1], 'root'), '')
isTip <- !child %in% parent
index <- c()
index[isTip] <- 1:sum(isTip)
index[!isTip] <- (sum(isTip)+1):length(isTip)
## tips comes first
mapping <- data.frame(id=index, row.names=child, isTip, taxaAbun=taxtab$V2)
mapping
edges <- cbind(mapping[parent,]$id, mapping$id)
edges <- edges[!is.na(edges[,1]),]
edges
a <- 1
b <- 1
mapping$nodeSize <- a*log(mapping$taxaAbun) + b
mapping$nodeClass <- factor(tax_class, levels = rev(tax_chars))
mapping
node.label <- rownames(mapping)[!mapping$isTip]
phylo <- structure(list(edge = edges,
node.label = node.label,
tip.label = rownames(mapping[mapping$isTip,]),
Nnode = length(node.label)
),
class = "phylo")
mapping
d <- rename_(mapping, node = ~id) %>% select_(~-isTip)
d
d <- mapping %>% select_(~-isTip)
treedata(phylo = phylo, data = as_data_frame(d))
devtools::document()
library(microbiomeViz)
library(microbiomeViz)
file <- '~/Downloads/SRS014459-Stool_profile.txt'
parseMetaphlanTSV(file)
tree = parseMetaphlanTSV(file)
tr = parseMetaphlanTSV(file)
library(ggtree)
p <- ggtree(tr, size=2, col='grey', layout = 'circular') #+
p
p <- ggtree(tr, size=2, col='grey', layout = 'circular') +
geom_point(size=nodeSize, shape=21, fill='white')
tr
p <- ggtree(tr, size=2, col='grey', layout = 'circular') +
geom_point(size=I(nodeSize), shape=21, fill='white')
p <- ggtree(tr, size=2, col='grey', layout = 'circular') +
geom_point(aes(size=I(nodeSize)), shape=21, fill='white')
p
devtools::document()
library(microbiomeViz)
is.character('asdasd/asdsad')
devtools::document()
devtools::document()
library(microbiomeViz)
devtools::document()
library(microbiomeViz)
library(microbiomeViz)
experiment1 <-
read.csv('~/Downloads/SRS014459-Stool_profile.txt')
parseMetaphlanTSV(experiment1)
experiment1
profile = experiment1
if (is.character(profile)) {
taxtab <- read.table(profile, sep='\t', stringsAsFactors=FALSE)
}else{
taxtab <- profile
}
taxtab
taxtab <- slice(taxtab, -grep('unclassified', .[,index]))
index=1
taxtab <- slice(taxtab, -grep('unclassified', .[,index]))
taxtab <- taxtab %>% slice(-grep('unclassified', .[,index]))
library(microbiomeViz)
experiment1 <-
read.csv('~/Downloads/SRS014459-Stool_profile.txt')
parseMetaphlanTSV(experiment1)
delimiter <- '\\|'
index <- 1
profile= experiment1
if (is.character(profile)) {
taxtab <- read.table(profile, sep='\t', stringsAsFactors=FALSE)
}else{
taxtab <- profile
}
taxtab <- taxtab %>% slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
tax_split <- strsplit(taxtab[,index], delimiter)    ## split into different taxonomy levels
taxtab[, index]
taxtab$index
taxtab <- data.frame(taxtab %>% slice(-grep('unclassified', .[,index])))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
tax_split <- strsplit(taxtab[,index], delimiter)    ## split into different taxonomy levels
taxtab[,index]
tax_split <- strsplit(select(taxtab, index), delimiter)    ## split into different taxonomy levels
taxtab <- taxtab %>% slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
select(taxtab, index)
select(taxtab, 1)
taxtab[,1]
if (is.character(profile)) {
taxtab <- read.table(profile, sep='\t', stringsAsFactors=FALSE)
}else{
taxtab <- profile
}
taxtab <- taxtab %>% slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
tax_split <- strsplit(select(taxtab, index), delimiter)    ## split into different taxonomy levels
select(taxtab, index)
profile
is.character(profile)
if (is.character(profile)) {
taxtab <- read.table(profile, sep='\t', stringsAsFactors=FALSE)
}else{
taxtab <- profile
}
experiment1 <-
read.table('~/Downloads/SRS014459-Stool_profile.txt')
experiment1
if (is.character(profile)) {
taxtab <- read.table(profile, sep='\t', stringsAsFactors=FALSE)
}else{
taxtab <- profile
}
taxtab <- taxtab %>% slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
taxtab[,index]
profile= experiment1
if (is.character(profile)) {
taxtab <- read.table(profile, sep='\t', stringsAsFactors=FALSE)
}else{
taxtab <- profile
}
taxtab <- taxtab %>% slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
tax_split <- strsplit(taxtab[,index], delimiter)    ## split into different taxonomy levels
taxtab[,index]
experiment1 <-
read.table('~/Downloads/SRS014459-Stool_profile.txt', stringsAsFactors = F)
profile= experiment1
if (is.character(profile)) {
taxtab <- read.table(profile, sep='\t', stringsAsFactors=FALSE)
}else{
taxtab <- profile
}
taxtab <- taxtab %>% slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
taxtab[,index]
as.character(taxtab[,index])
taxtab$index
names(taxtab)
if (is.character(tax.profile)) {
taxtab <- read.table(tax.profile, sep='\t', stringsAsFactors=FALSE)
}else{
taxtab <- tax.profile
}
names(taxtab)[index] <- 'tax'
tax.profile=profile
if (is.character(tax.profile)) {
taxtab <- read.table(tax.profile, sep='\t', stringsAsFactors=FALSE)
}else{
taxtab <- tax.profile
}
names(taxtab)[index] <- 'tax'
names(taxtab)[-index] <- 'rel_abun'
taxtab <- taxtab %>% slice(-grep('unclassified', .[,index]))
tax_chars <- c('k', 'p', 'c', 'o', 'f', 'g', 's', 't')
tax_split <- strsplit(taxtab$tax, delimiter)    ## split into different taxonomy levels
library(microbiomeViz)
devtools::document()
library(microbiomeViz)
experiment1 <-
read.table('~/Downloads/SRS014459-Stool_profile.txt', stringsAsFactors = F)
parseMetaphlanTSV(experiment1)
tr = parseMetaphlanTSV(experiment1)
p <- ggtree(tr, size=2, col='grey', layout = 'circular') +
geom_point(aes(size=I(nodeSize)), shape=21, fill='white')
p
devtools::use_data(experiment1)
devtools::document()
library(microbiomeViz)
data("experiment1")
dim(experiment1)
experiment1
head(experiment1)
SRS014459_Stool_profile <-
read.table('~/Downloads/SRS014459-Stool_profile.txt', stringsAsFactors = F)
devtools::use_data(SRS014459-Stool_profile)
SRS014459_Stool_profile <-
read.table('~/Downloads/SRS014459-Stool_profile.txt', stringsAsFactors = F)
devtools::use_data(SRS014459-Stool_profile)
SRS014459_Stool_profile <-
read.table('~/Downloads/SRS014459-Stool_profile.txt', stringsAsFactors = F)
devtools::use_data(SRS014459-Stool_profile)
devtools::use_data(SRS014459_Stool_profile)
devtools::document()
library(microbiomeViz)
data("SRS014459_Stool_profile")
SRS014459_Stool_profile
parseMetaphlanTSV(SRS014459_Stool_profile)
?SRS014459_Stool_profile
